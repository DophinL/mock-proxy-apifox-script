function h(n,o){if(!Array.isArray(n)||typeof o!="function")throw new Error("Invalid arguments. Expected an array and a function.");let e=[],i=[];for(let a of n)o(a)?e.push(a):i.push(a);return[e,i]}function R(n){let o=new FormData;for(let e in n)n.hasOwnProperty(e)&&o.append(e,n[e]);return o}function l(n){return{"X-Project-Id":`${n.id}`,Authorization:n==null?void 0:n.bearerToken,"X-Client-Version":n==null?void 0:n.clientVersion}}var c="https://app.apifox.com",S=async(n,o)=>{let{projectConfig:e}=n,{data:i}=await o.fetchJSON(`${c}/api/v1/project-members`,{headers:l(e)}),a=await o.fetchJSON(`${c}/api/v1/api-tree-list`,{headers:l(e)}),d=[],A=[],u=s=>{var t;let f=((t=e.requestMap)==null?void 0:t[s.path])||s.path,r=(i||[]).find(p=>p.user.id===s.responsibleId);return{id:s.id,name:s.name,method:s.method.toUpperCase(),path:s.path,realPath:f,creator:`${(r==null?void 0:r.nickname)||"-"}`,mockUrl:`${e==null?void 0:e.mockPrefixUrl}${s.path}`,sourceUrl:`${c}/project/${e==null?void 0:e.id}/apis/api-${s==null?void 0:s.id}`}},m=(s,f="")=>{if(s.type!=="apiDetailFolder"||!s.children||s.children.length===0)return;let[r,t]=h(s.children||[],p=>p.type==="apiDetail");if(r.length>0){let p=r.map(x=>u(x.api));A.push(...p),d.push({id:s.key,name:f?`${f}__${s.name}`:s.name,apis:p})}t.forEach(p=>{m(p,s.name)})};return a.data.forEach(s=>{m(s)}),{groups:[{id:"all",name:"\u5168\u90E8\u63A5\u53E3",apis:A},...d]}},y=async(n,o)=>{var s,f,r;let{projectConfig:e,overviewApiResponse:i}=n,a=await o.fetchJSON(`${c}/api/v1/api-details/${i.id}`,{headers:l(e)}),A=(await o.fetchJSON(`${c}/api/v1/api-mocks`,{headers:l(e)})).data.filter(t=>t.apiDetailId===i.id).map((t,p)=>({id:p===0?"default":t.id,name:t.name,mockUrl:`${e==null?void 0:e.mockPrefixUrl}${i.path}`,mockData:JSON.parse(t.response.bodyData),realSceneId:t.id})),u=((s=e.requestMap)==null?void 0:s[i.path])||i.path;return{id:i.id,name:i.name,method:i.method,path:i.path,realPath:u,desc:(f=a==null?void 0:a.data)==null?void 0:f.description,creator:`${i.creator}`,mockUrl:`${e==null?void 0:e.mockPrefixUrl}${i.path}`,sourceUrl:`${c}/project/${e==null?void 0:e.id}/apis/api-${i==null?void 0:i.id}`,mockData:((r=A[0])==null?void 0:r.mockData)||{},scenes:A}},O=(n,o)=>{let{projectConfig:e,apiResponse:i,addScenePayload:a}=n,d={response:{code:200,delay:0,headers:[],bodyType:"json",bodyData:JSON.stringify(a.mockData)},name:a.name,apiDetailId:i.id,conditions:[],ipCondition:{}};return o.fetchJSON(`${c}/api/v1/api-mocks`,{method:"POST",body:R(d),headers:l(e)}).then(A=>({id:A.data.id}))},P=(n,o)=>{let{projectConfig:e,apiResponse:i,sceneResponse:a}=n,d={response:{code:200,delay:0,headers:[],bodyType:"json",bodyData:JSON.stringify(a.mockData)},name:a.name,apiDetailId:i.id,id:a.id,conditions:[],ipCondition:{}};return o.fetchJSON(`${c}/api/v1/api-mocks/${a.realSceneId}`,{method:"PUT",body:R(d),headers:l(e)})},g=(n,o)=>{let{projectConfig:e,sceneResponse:i}=n;return o.fetchJSON(`${c}/api/v1/api-mocks/${i.realSceneId}`,{method:"DELETE",headers:l(e)})};export{O as addApiScene,g as deleteApiScene,y as getApi,S as getProject,P as updateApiScene};
